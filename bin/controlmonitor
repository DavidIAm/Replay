#!/usr/bin/perl
#
# DEPLOYMENT_STAGE=dev DATACENTER=rackspace work/replayd
#
# DEPLOYMENT STAGE sets the STAGE of the CONFIG loading from /etc/cargotel/conf
# it will probably be one of prod/dev/sandbox
#
# The replay system is DB agnostic so it uses special designator 'replay'
#
# the DATACENTER is used to put in different settings as relevant for whether
# we are at rackspace or at AWS
#
# /etc/cargotel/conf/STAGE.DB.DATACENTER.yaml
#
#
my $config = CgtConfig::locale($ENV{DEPLOYMENT_STAGE} || 'dev',
    'replay', $ENV{DATACENTER} || 'rackspace')->config();


use Replay;
use Data::Dumper;
use CgtConfig;
$Data::Dumper::Sortkeys = 1;
print Dumper $config;
my $replay = Replay->new(config=>$config->{Replay}, rules => []);

$replay->eventSystem->control->subscribe(
    sub {
        my $message = shift;
        print scalar localtime time;
        print " ";
        print 'control';
        print " ";
        print $message->{MessageType};
        print " ";
        print $message->{Message}{domain};
        print " ";
        print $message->{Message}{name};
        print " ";
        print $message->{Message}{version};
        print " ";
        print $message->{Message}{window};
        print " ";
        print $message->{Message}{key};
        print "\n";

    }
);

=pod

$replay->eventSystem->originsniffer->subscribe( sub {
        my $message = shift;
        print scalar localtime time;
        print " ";
        print 'origin';
        print " ";
        print $message->{MessageType};
        print " ";
        print "\n";

    });
my $json = new JSON;
$json->canonical(1);
$json->allow_nonref(1);
$replay->eventSystem->derivedsniffer->subscribe( sub {
        my $message = shift;
        print scalar localtime time;
        print " ";
        print 'derived';
        print " ";
        print $message->{MessageType};
        print " ";
        print $json->encode($message->{Message});
        print " ";
        print "\n";

    });

=cut

local $SIG{INT} = sub{
	warn "INT";
	$replay->eventSystem->stop();
};
local $SIG{KILL} = sub{
	warn "KILL";
	$replay->eventSystem->stop();
};
$replay->eventSystem->run();






__END__
Wed Aug  6 13:39:51 2014$VAR1 = {
          'CreatedTime' => '1407346790.70101',
          'Message' => {
                         '__CLASS__' => 'Replay::Message::IdKey',
                         'domain' => 'global',
                         'key' => 'e1f790bdcb754203d3f603b351ec3f4f',
                         'name' => 'CRMWantsNewProject',
                         'version' => '1',
                         'window' => 'alltime'
                       },
          'MessageType' => 'Unlocked',
          'ReceivedTime' => '1407346790.70086',
          'Replay' => '20140727',
          'UUID' => 'AADC42DE-1D90-11E4-90CE-ED7568709A98',
          '__CLASS__' => 'Replay::Message::Unlocked'
        };

